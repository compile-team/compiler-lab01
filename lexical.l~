%option yylineno
%{
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "syntax.tab.h"
	int line=1;
	int yycolumn = 1;
	#define YY_USER_ACTION
	  yylloc.first_line = yylloc.last_line = yylineno; \
	  yylloc.first_column = yycolumn; \
	  yyloc.last_column = yycolumn + yyleng -1; \
	  yycolumn += yyleng;
%}

digit [0-9]
digits [digit]+
letter [a-zA-Z]
letters [letter]+
INT [+-]?(0|[1-9]([0-9])*)
FLOAT ([+-]?[0-9]*[\.]?[0-9]*[eE][+-]?[0-9]+)|([+-]?([0-9]*\.[0-9]+|[0-9]+\.))
ID [a-zA-Z]([_0-9a-zA-Z])*
DEMIN [ \t]
SEMI ;
COMMA ,
ASSIGNOP =
RELOP >|<|<=|>=|==|!=
PLUS +
MINUS -
STAR *
DIV /
AND &&
OR ||
DOT .
NOT !
TYPE int|float
LP (
RP )
LB [
RB ]
LC {
RC }
STRUCT struct
RETURN return
IF if
ELSE else
WHILE while

%%
";"|","|"int"|"float"|"="|" "|"{"|"}"|"("|")"|"	"|"["|"]"|"struct"|"return"|"if"|"else"|"while" {printf("type or character at line %d\n",line);}
{FLOAT} {printf("float at line %d at %s\n",line,yytext); yylval = atoi(yytext); return FLOAT;}
{INT} {printf("int at line %d at %s\n",line,yytext); yylval = atoi(yytext); return INT;}
{ID} {printf("id at line %d\n",line); yylval = atoi(yytext); return ID;}
{LETTER} {printf("letter at line %d at %s\n",line,yytext);}
\n {line++; yycolumn = 1;}
"+" {return PLUS;}
"-" {return SUB;}
"&&" {return AND;}
"||" {return OR};
"!" {return NOT};
. {printf("error type A at Line %d : Mysterious characters \'%s\'\n",line,yytext);}

%% 

int main(int argc,char** argv){
	if(argc <= 1) 
		return 1;
	if(argc >1){
		if(!(yyin = fopen(argv[1],"r"))){
			perror(argv[1]);
			return 1;
		}
	}
	yyrestart(f);
	yyparse();
	return 0;
}
